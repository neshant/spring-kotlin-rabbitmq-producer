plugins {
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.10"
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
}


group 'com.store'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    compile group: 'io.github.microutils', name: 'kotlin-logging', version: '1.6.10'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp', version: '2.1.2.RELEASE'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//docker services for starting/stopping rabbitmq

task startServices(type: Exec) {
    group = 'Docker Services'
    description = 'Start docker containers used for development.'

    commandLine '/usr/local/bin/docker-compose', 'up', '-d'
}

task stopServices(type: Exec) {
    group = 'Docker Services'
    description = 'Stop docker containers used for development.'

    commandLine '/usr/local/bin/docker-compose', 'down'
}

def env = project.hasProperty('env') ? project.property('env') : 'local'

// make sure services are running for bootRun in a local dev environment
if (env == 'local') {
    bootRun.dependsOn(startServices)
}
